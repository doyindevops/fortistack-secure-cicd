name: Secure CI/CD Pipeline - FortiStack

on:
  # push:
  # branches: [main]
  # pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: fortistack-app
  ECR_REPOSITORY: fortistack-ecr-repo
  IMAGE_TAG: ${{ github.sha }}

defaults:
  run:
    shell: bash

jobs:
  secret-scan:
    name:  Gitleaks - Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name:  Checkout Code
        uses: actions/checkout@v3

      - name:  Run Gitleaks
        uses: zricethezav/gitleaks-action@v2
        with:
          config-path: gitleaks.toml

  terraform-scan:
    name:  Checkov - Terraform Security Scan
    runs-on: ubuntu-latest
    steps:
      - name:  Checkout Code
        uses: actions/checkout@v3

      - name:  Run Checkov (with SARIF output)
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: ./terraform
          output_format: sarif
          output_file_path: results.sarif

      - name: Upload Checkov SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  build-and-scan:
    name:  Docker Build & Trivy Scan
    runs-on: ubuntu-latest
    needs: [secret-scan, terraform-scan]
    steps:
      - name:  Checkout Code
        uses: actions/checkout@v3

      # OPTIONAL: Enable BuildKit caching
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Cache Docker layers
      #   uses: actions/cache@v3
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-docker-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-docker-

      - name:  Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name:  Trivy - Docker Image Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  deploy:
    name:  Deploy to EKS (if image is clean)
    needs: build-and-scan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name:  Checkout Code
        uses: actions/checkout@v3

      - name:  Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name:  Setup kubectl
        run: |
          aws eks update-kubeconfig --name fortistack-eks --region $AWS_REGION

      - name:  Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/manifests/

