name: FortiStack App - Secure Deployment Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: fortistack-app
  ECR_REPOSITORY: fortistack-ecr-repo
  IMAGE_TAG: ${{ github.sha }}

defaults:
  run:
    shell: bash

jobs:
  secure-deploy:
    name:  Build, Scan & Deploy
    runs-on: ubuntu-latest

    steps:
      - name:  Checkout Code
        uses: actions/checkout@v3

      - name:  Gitleaks - Secrets Scan
        uses: zricethezav/gitleaks-action@v2
        with:
          config-path: gitleaks.toml

      - name:  Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name:  Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name:  Build Docker Image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name:  Trivy - Vulnerability Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name:  Push Docker Image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name:  Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name fortistack-eks

      - name:  Deploy to EKS
        run: |
          kubectl apply -f k8s/manifests/
